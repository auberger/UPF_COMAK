/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 * The Concurrent Optimization of Muscle Activations and Kinematics (COMAK) <br>
 * algorithm enables the calculatation of muscle forces, ligament forces, <br>
 * articular contact pressures, and secondary kinematics throughout a measured <br>
 * movement. An optimization is performed that minimizes<br>
 * <br>
 * As inputs, COMAK requires a .osim model, measured joint kinematics (motion <br>
 *  capture etc.), and the ExternalLoads experienced by the model during the <br>
 *  activity (ground reactions etc). <br>
 * <br>
 * A key aspect of COMAK is the differentiation between Model Coordinates as <br>
 * Prescribed, Primary or Secondary. The Prescribed and Primary Coordinates must<br>
 * be measured througout the activity, while the secondary coordinates are <br>
 * predicted by the simulation. Within the COMAK optimization, the accelerations <br>
 * of the Prescribed coordinates are achieved through multibody dynamic constraints<br>
 * (ie not generated by the forces in the model), whereas the the accelerations<br>
 * of the Primary coordinates must be generated by the model forces <br>
 * (muscles, ligaments, contact, external, inertial and centripetal). <br>
 * <br>
 * The COMAKInverseKinematicsTool facilitates the calculation of the Presecribed<br>
 * and Primary kinematics from motion capture data. <br>
 * <br>
 * A forward simulation is commonly performed to initialize the Secondary Coordinate<br>
 * values at the first time step of COMAK (settle_secondary_coordinates_at_start).<br>
 * Here, the model Coordinates are first set to the values at the corresponding time <br>
 * step in the coordinates_file. The Prescribed and Primary Coordinates are then <br>
 * locked, while the Secondary Coordinates are left unconstrained. <br>
 * No external loads are applied to the model, and the muscle forces are set to <br>
 * 0.02 * maxIsometricForce to represent their passive contributions. Thus, in the <br>
 * forward dynamic simulation, the Secondary Coordinate are allowed to settle into <br>
 * equilibrium based on the passive muscle, ligament, and articular contact forces. <br>
 * This settling simulation is terminated when the largest change in the Secondary<br>
 * Coordinates between time steps is less than the settle_threshold. <br>
 * <br>
 * ### References<br>
 * [1] <br>
 * <br>
 * [2] <br>
 * <br>
 * [3]
 */
public class COMAKTool extends OpenSimObject {
  private transient long swigCPtr;

  public COMAKTool(long cPtr, boolean cMemoryOwn) {
    super(opensimJAMJNI.COMAKTool_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(COMAKTool obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimJAMJNI.delete_COMAKTool(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static COMAKTool safeDownCast(OpenSimObject obj) {
    long cPtr = opensimJAMJNI.COMAKTool_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new COMAKTool(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimJAMJNI.COMAKTool_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimJAMJNI.COMAKTool_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimJAMJNI.COMAKTool_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new COMAKTool(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimJAMJNI.COMAKTool_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_model_file(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_model_file(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_model_file(int i) {
    return opensimJAMJNI.COMAKTool_get_model_file__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_model_file(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_model_file__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_model_file(int i, String value) {
    opensimJAMJNI.COMAKTool_set_model_file__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_model_file(String value) {
    return opensimJAMJNI.COMAKTool_append_model_file(swigCPtr, this, value);
  }

  public void constructProperty_model_file(String initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_model_file(swigCPtr, this, initValue);
  }

  public String get_model_file() {
    return opensimJAMJNI.COMAKTool_get_model_file__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_model_file() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_model_file__SWIG_1(swigCPtr, this), false);
  }

  public void set_model_file(String value) {
    opensimJAMJNI.COMAKTool_set_model_file__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_coordinates_file(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_coordinates_file(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_coordinates_file(int i) {
    return opensimJAMJNI.COMAKTool_get_coordinates_file__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_coordinates_file(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_coordinates_file__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_coordinates_file(int i, String value) {
    opensimJAMJNI.COMAKTool_set_coordinates_file__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_coordinates_file(String value) {
    return opensimJAMJNI.COMAKTool_append_coordinates_file(swigCPtr, this, value);
  }

  public void constructProperty_coordinates_file(String initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_coordinates_file(swigCPtr, this, initValue);
  }

  public String get_coordinates_file() {
    return opensimJAMJNI.COMAKTool_get_coordinates_file__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_coordinates_file() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_coordinates_file__SWIG_1(swigCPtr, this), false);
  }

  public void set_coordinates_file(String value) {
    opensimJAMJNI.COMAKTool_set_coordinates_file__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_external_loads_file(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_external_loads_file(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_external_loads_file(int i) {
    return opensimJAMJNI.COMAKTool_get_external_loads_file__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_external_loads_file(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_external_loads_file__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_external_loads_file(int i, String value) {
    opensimJAMJNI.COMAKTool_set_external_loads_file__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_external_loads_file(String value) {
    return opensimJAMJNI.COMAKTool_append_external_loads_file(swigCPtr, this, value);
  }

  public void constructProperty_external_loads_file(String initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_external_loads_file(swigCPtr, this, initValue);
  }

  public String get_external_loads_file() {
    return opensimJAMJNI.COMAKTool_get_external_loads_file__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_external_loads_file() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_external_loads_file__SWIG_1(swigCPtr, this), false);
  }

  public void set_external_loads_file(String value) {
    opensimJAMJNI.COMAKTool_set_external_loads_file__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_results_directory(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_results_directory(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_results_directory(int i) {
    return opensimJAMJNI.COMAKTool_get_results_directory__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_results_directory(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_results_directory__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_results_directory(int i, String value) {
    opensimJAMJNI.COMAKTool_set_results_directory__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_results_directory(String value) {
    return opensimJAMJNI.COMAKTool_append_results_directory(swigCPtr, this, value);
  }

  public void constructProperty_results_directory(String initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_results_directory(swigCPtr, this, initValue);
  }

  public String get_results_directory() {
    return opensimJAMJNI.COMAKTool_get_results_directory__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_results_directory() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_results_directory__SWIG_1(swigCPtr, this), false);
  }

  public void set_results_directory(String value) {
    opensimJAMJNI.COMAKTool_set_results_directory__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_results_prefix(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_results_prefix(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_results_prefix(int i) {
    return opensimJAMJNI.COMAKTool_get_results_prefix__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_results_prefix(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_results_prefix__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_results_prefix(int i, String value) {
    opensimJAMJNI.COMAKTool_set_results_prefix__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_results_prefix(String value) {
    return opensimJAMJNI.COMAKTool_append_results_prefix(swigCPtr, this, value);
  }

  public void constructProperty_results_prefix(String initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_results_prefix(swigCPtr, this, initValue);
  }

  public String get_results_prefix() {
    return opensimJAMJNI.COMAKTool_get_results_prefix__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_results_prefix() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_results_prefix__SWIG_1(swigCPtr, this), false);
  }

  public void set_results_prefix(String value) {
    opensimJAMJNI.COMAKTool_set_results_prefix__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_replace_force_set(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_replace_force_set(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public boolean get_replace_force_set(int i) {
    return opensimJAMJNI.COMAKTool_get_replace_force_set__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_replace_force_set(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_replace_force_set__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_replace_force_set(int i, boolean value) {
    opensimJAMJNI.COMAKTool_set_replace_force_set__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_replace_force_set(boolean value) {
    return opensimJAMJNI.COMAKTool_append_replace_force_set(swigCPtr, this, value);
  }

  public void constructProperty_replace_force_set(boolean initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_replace_force_set(swigCPtr, this, initValue);
  }

  public boolean get_replace_force_set() {
    return opensimJAMJNI.COMAKTool_get_replace_force_set__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_replace_force_set() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_replace_force_set__SWIG_1(swigCPtr, this), false);
  }

  public void set_replace_force_set(boolean value) {
    opensimJAMJNI.COMAKTool_set_replace_force_set__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_force_set_file(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_force_set_file(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_force_set_file(int i) {
    return opensimJAMJNI.COMAKTool_get_force_set_file__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_force_set_file(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_force_set_file__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_force_set_file(int i, String value) {
    opensimJAMJNI.COMAKTool_set_force_set_file__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_force_set_file(String value) {
    return opensimJAMJNI.COMAKTool_append_force_set_file(swigCPtr, this, value);
  }

  public void constructProperty_force_set_file(String initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_force_set_file(swigCPtr, this, initValue);
  }

  public String get_force_set_file() {
    return opensimJAMJNI.COMAKTool_get_force_set_file__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_force_set_file() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_force_set_file__SWIG_1(swigCPtr, this), false);
  }

  public void set_force_set_file(String value) {
    opensimJAMJNI.COMAKTool_set_force_set_file__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_start_time(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_start_time(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_start_time(int i) {
    return opensimJAMJNI.COMAKTool_get_start_time__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_start_time(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_start_time__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_start_time(int i, double value) {
    opensimJAMJNI.COMAKTool_set_start_time__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_start_time(double value) {
    return opensimJAMJNI.COMAKTool_append_start_time(swigCPtr, this, value);
  }

  public void constructProperty_start_time(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_start_time(swigCPtr, this, initValue);
  }

  public double get_start_time() {
    return opensimJAMJNI.COMAKTool_get_start_time__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_start_time() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_start_time__SWIG_1(swigCPtr, this), false);
  }

  public void set_start_time(double value) {
    opensimJAMJNI.COMAKTool_set_start_time__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_stop_time(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_stop_time(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_stop_time(int i) {
    return opensimJAMJNI.COMAKTool_get_stop_time__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_stop_time(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_stop_time__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_stop_time(int i, double value) {
    opensimJAMJNI.COMAKTool_set_stop_time__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_stop_time(double value) {
    return opensimJAMJNI.COMAKTool_append_stop_time(swigCPtr, this, value);
  }

  public void constructProperty_stop_time(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_stop_time(swigCPtr, this, initValue);
  }

  public double get_stop_time() {
    return opensimJAMJNI.COMAKTool_get_stop_time__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_stop_time() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_stop_time__SWIG_1(swigCPtr, this), false);
  }

  public void set_stop_time(double value) {
    opensimJAMJNI.COMAKTool_set_stop_time__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_time_step(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_time_step(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_time_step(int i) {
    return opensimJAMJNI.COMAKTool_get_time_step__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_time_step(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_time_step__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_time_step(int i, double value) {
    opensimJAMJNI.COMAKTool_set_time_step__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_time_step(double value) {
    return opensimJAMJNI.COMAKTool_append_time_step(swigCPtr, this, value);
  }

  public void constructProperty_time_step(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_time_step(swigCPtr, this, initValue);
  }

  public double get_time_step() {
    return opensimJAMJNI.COMAKTool_get_time_step__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_time_step() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_time_step__SWIG_1(swigCPtr, this), false);
  }

  public void set_time_step(double value) {
    opensimJAMJNI.COMAKTool_set_time_step__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_lowpass_filter_frequency(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_lowpass_filter_frequency(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_lowpass_filter_frequency(int i) {
    return opensimJAMJNI.COMAKTool_get_lowpass_filter_frequency__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_lowpass_filter_frequency(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_lowpass_filter_frequency__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_lowpass_filter_frequency(int i, double value) {
    opensimJAMJNI.COMAKTool_set_lowpass_filter_frequency__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_lowpass_filter_frequency(double value) {
    return opensimJAMJNI.COMAKTool_append_lowpass_filter_frequency(swigCPtr, this, value);
  }

  public void constructProperty_lowpass_filter_frequency(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_lowpass_filter_frequency(swigCPtr, this, initValue);
  }

  public double get_lowpass_filter_frequency() {
    return opensimJAMJNI.COMAKTool_get_lowpass_filter_frequency__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_lowpass_filter_frequency() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_lowpass_filter_frequency__SWIG_1(swigCPtr, this), false);
  }

  public void set_lowpass_filter_frequency(double value) {
    opensimJAMJNI.COMAKTool_set_lowpass_filter_frequency__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_print_processed_input_kinematics(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_print_processed_input_kinematics(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public boolean get_print_processed_input_kinematics(int i) {
    return opensimJAMJNI.COMAKTool_get_print_processed_input_kinematics__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_print_processed_input_kinematics(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_print_processed_input_kinematics__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_print_processed_input_kinematics(int i, boolean value) {
    opensimJAMJNI.COMAKTool_set_print_processed_input_kinematics__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_print_processed_input_kinematics(boolean value) {
    return opensimJAMJNI.COMAKTool_append_print_processed_input_kinematics(swigCPtr, this, value);
  }

  public void constructProperty_print_processed_input_kinematics(boolean initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_print_processed_input_kinematics(swigCPtr, this, initValue);
  }

  public boolean get_print_processed_input_kinematics() {
    return opensimJAMJNI.COMAKTool_get_print_processed_input_kinematics__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_print_processed_input_kinematics() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_print_processed_input_kinematics__SWIG_1(swigCPtr, this), false);
  }

  public void set_print_processed_input_kinematics(boolean value) {
    opensimJAMJNI.COMAKTool_set_print_processed_input_kinematics__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_prescribed_coordinates(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_prescribed_coordinates(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_prescribed_coordinates(int i) {
    return opensimJAMJNI.COMAKTool_get_prescribed_coordinates(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_prescribed_coordinates(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_prescribed_coordinates(swigCPtr, this, i), false);
  }

  public void set_prescribed_coordinates(int i, String value) {
    opensimJAMJNI.COMAKTool_set_prescribed_coordinates(swigCPtr, this, i, value);
  }

  public int append_prescribed_coordinates(String value) {
    return opensimJAMJNI.COMAKTool_append_prescribed_coordinates(swigCPtr, this, value);
  }

  public void constructProperty_prescribed_coordinates() {
    opensimJAMJNI.COMAKTool_constructProperty_prescribed_coordinates(swigCPtr, this);
  }

  public void copyProperty_primary_coordinates(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_primary_coordinates(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_primary_coordinates(int i) {
    return opensimJAMJNI.COMAKTool_get_primary_coordinates(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_primary_coordinates(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_primary_coordinates(swigCPtr, this, i), false);
  }

  public void set_primary_coordinates(int i, String value) {
    opensimJAMJNI.COMAKTool_set_primary_coordinates(swigCPtr, this, i, value);
  }

  public int append_primary_coordinates(String value) {
    return opensimJAMJNI.COMAKTool_append_primary_coordinates(swigCPtr, this, value);
  }

  public void constructProperty_primary_coordinates() {
    opensimJAMJNI.COMAKTool_constructProperty_primary_coordinates(swigCPtr, this);
  }

  public void copyProperty_COMAKSecondaryCoordinateSet(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_COMAKSecondaryCoordinateSet(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public COMAKSecondaryCoordinateSet get_COMAKSecondaryCoordinateSet(int i) {
    return new COMAKSecondaryCoordinateSet(opensimJAMJNI.COMAKTool_get_COMAKSecondaryCoordinateSet__SWIG_0(swigCPtr, this, i), false);
  }

  public COMAKSecondaryCoordinateSet upd_COMAKSecondaryCoordinateSet(int i) {
    return new COMAKSecondaryCoordinateSet(opensimJAMJNI.COMAKTool_upd_COMAKSecondaryCoordinateSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_COMAKSecondaryCoordinateSet(int i, COMAKSecondaryCoordinateSet value) {
    opensimJAMJNI.COMAKTool_set_COMAKSecondaryCoordinateSet__SWIG_0(swigCPtr, this, i, COMAKSecondaryCoordinateSet.getCPtr(value), value);
  }

  public int append_COMAKSecondaryCoordinateSet(COMAKSecondaryCoordinateSet value) {
    return opensimJAMJNI.COMAKTool_append_COMAKSecondaryCoordinateSet(swigCPtr, this, COMAKSecondaryCoordinateSet.getCPtr(value), value);
  }

  public void constructProperty_COMAKSecondaryCoordinateSet(COMAKSecondaryCoordinateSet initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_COMAKSecondaryCoordinateSet(swigCPtr, this, COMAKSecondaryCoordinateSet.getCPtr(initValue), initValue);
  }

  public COMAKSecondaryCoordinateSet get_COMAKSecondaryCoordinateSet() {
    return new COMAKSecondaryCoordinateSet(opensimJAMJNI.COMAKTool_get_COMAKSecondaryCoordinateSet__SWIG_1(swigCPtr, this), false);
  }

  public COMAKSecondaryCoordinateSet upd_COMAKSecondaryCoordinateSet() {
    return new COMAKSecondaryCoordinateSet(opensimJAMJNI.COMAKTool_upd_COMAKSecondaryCoordinateSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_COMAKSecondaryCoordinateSet(COMAKSecondaryCoordinateSet value) {
    opensimJAMJNI.COMAKTool_set_COMAKSecondaryCoordinateSet__SWIG_1(swigCPtr, this, COMAKSecondaryCoordinateSet.getCPtr(value), value);
  }

  public void copyProperty_settle_secondary_coordinates_at_start(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_settle_secondary_coordinates_at_start(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public boolean get_settle_secondary_coordinates_at_start(int i) {
    return opensimJAMJNI.COMAKTool_get_settle_secondary_coordinates_at_start__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_settle_secondary_coordinates_at_start(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_settle_secondary_coordinates_at_start__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_settle_secondary_coordinates_at_start(int i, boolean value) {
    opensimJAMJNI.COMAKTool_set_settle_secondary_coordinates_at_start__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_settle_secondary_coordinates_at_start(boolean value) {
    return opensimJAMJNI.COMAKTool_append_settle_secondary_coordinates_at_start(swigCPtr, this, value);
  }

  public void constructProperty_settle_secondary_coordinates_at_start(boolean initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_settle_secondary_coordinates_at_start(swigCPtr, this, initValue);
  }

  public boolean get_settle_secondary_coordinates_at_start() {
    return opensimJAMJNI.COMAKTool_get_settle_secondary_coordinates_at_start__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_settle_secondary_coordinates_at_start() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_settle_secondary_coordinates_at_start__SWIG_1(swigCPtr, this), false);
  }

  public void set_settle_secondary_coordinates_at_start(boolean value) {
    opensimJAMJNI.COMAKTool_set_settle_secondary_coordinates_at_start__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_settle_threshold(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_settle_threshold(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_settle_threshold(int i) {
    return opensimJAMJNI.COMAKTool_get_settle_threshold__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_settle_threshold(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_settle_threshold__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_settle_threshold(int i, double value) {
    opensimJAMJNI.COMAKTool_set_settle_threshold__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_settle_threshold(double value) {
    return opensimJAMJNI.COMAKTool_append_settle_threshold(swigCPtr, this, value);
  }

  public void constructProperty_settle_threshold(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_settle_threshold(swigCPtr, this, initValue);
  }

  public double get_settle_threshold() {
    return opensimJAMJNI.COMAKTool_get_settle_threshold__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_settle_threshold() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_settle_threshold__SWIG_1(swigCPtr, this), false);
  }

  public void set_settle_threshold(double value) {
    opensimJAMJNI.COMAKTool_set_settle_threshold__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_settle_accuracy(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_settle_accuracy(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_settle_accuracy(int i) {
    return opensimJAMJNI.COMAKTool_get_settle_accuracy__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_settle_accuracy(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_settle_accuracy__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_settle_accuracy(int i, double value) {
    opensimJAMJNI.COMAKTool_set_settle_accuracy__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_settle_accuracy(double value) {
    return opensimJAMJNI.COMAKTool_append_settle_accuracy(swigCPtr, this, value);
  }

  public void constructProperty_settle_accuracy(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_settle_accuracy(swigCPtr, this, initValue);
  }

  public double get_settle_accuracy() {
    return opensimJAMJNI.COMAKTool_get_settle_accuracy__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_settle_accuracy() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_settle_accuracy__SWIG_1(swigCPtr, this), false);
  }

  public void set_settle_accuracy(double value) {
    opensimJAMJNI.COMAKTool_set_settle_accuracy__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_settle_internal_step_limit(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_settle_internal_step_limit(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public int get_settle_internal_step_limit(int i) {
    return opensimJAMJNI.COMAKTool_get_settle_internal_step_limit__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_int upd_settle_internal_step_limit(int i) {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_settle_internal_step_limit__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_settle_internal_step_limit(int i, int value) {
    opensimJAMJNI.COMAKTool_set_settle_internal_step_limit__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_settle_internal_step_limit(int value) {
    return opensimJAMJNI.COMAKTool_append_settle_internal_step_limit(swigCPtr, this, value);
  }

  public void constructProperty_settle_internal_step_limit(int initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_settle_internal_step_limit(swigCPtr, this, initValue);
  }

  public int get_settle_internal_step_limit() {
    return opensimJAMJNI.COMAKTool_get_settle_internal_step_limit__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_int upd_settle_internal_step_limit() {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_settle_internal_step_limit__SWIG_1(swigCPtr, this), false);
  }

  public void set_settle_internal_step_limit(int value) {
    opensimJAMJNI.COMAKTool_set_settle_internal_step_limit__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_print_settle_sim_results(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_print_settle_sim_results(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public boolean get_print_settle_sim_results(int i) {
    return opensimJAMJNI.COMAKTool_get_print_settle_sim_results__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_print_settle_sim_results(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_print_settle_sim_results__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_print_settle_sim_results(int i, boolean value) {
    opensimJAMJNI.COMAKTool_set_print_settle_sim_results__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_print_settle_sim_results(boolean value) {
    return opensimJAMJNI.COMAKTool_append_print_settle_sim_results(swigCPtr, this, value);
  }

  public void constructProperty_print_settle_sim_results(boolean initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_print_settle_sim_results(swigCPtr, this, initValue);
  }

  public boolean get_print_settle_sim_results() {
    return opensimJAMJNI.COMAKTool_get_print_settle_sim_results__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_print_settle_sim_results() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_print_settle_sim_results__SWIG_1(swigCPtr, this), false);
  }

  public void set_print_settle_sim_results(boolean value) {
    opensimJAMJNI.COMAKTool_set_print_settle_sim_results__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_settle_sim_results_directory(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_settle_sim_results_directory(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_settle_sim_results_directory(int i) {
    return opensimJAMJNI.COMAKTool_get_settle_sim_results_directory__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_settle_sim_results_directory(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_settle_sim_results_directory__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_settle_sim_results_directory(int i, String value) {
    opensimJAMJNI.COMAKTool_set_settle_sim_results_directory__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_settle_sim_results_directory(String value) {
    return opensimJAMJNI.COMAKTool_append_settle_sim_results_directory(swigCPtr, this, value);
  }

  public void constructProperty_settle_sim_results_directory(String initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_settle_sim_results_directory(swigCPtr, this, initValue);
  }

  public String get_settle_sim_results_directory() {
    return opensimJAMJNI.COMAKTool_get_settle_sim_results_directory__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_settle_sim_results_directory() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_settle_sim_results_directory__SWIG_1(swigCPtr, this), false);
  }

  public void set_settle_sim_results_directory(String value) {
    opensimJAMJNI.COMAKTool_set_settle_sim_results_directory__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_settle_sim_results_prefix(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_settle_sim_results_prefix(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public String get_settle_sim_results_prefix(int i) {
    return opensimJAMJNI.COMAKTool_get_settle_sim_results_prefix__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_settle_sim_results_prefix(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_settle_sim_results_prefix__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_settle_sim_results_prefix(int i, String value) {
    opensimJAMJNI.COMAKTool_set_settle_sim_results_prefix__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_settle_sim_results_prefix(String value) {
    return opensimJAMJNI.COMAKTool_append_settle_sim_results_prefix(swigCPtr, this, value);
  }

  public void constructProperty_settle_sim_results_prefix(String initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_settle_sim_results_prefix(swigCPtr, this, initValue);
  }

  public String get_settle_sim_results_prefix() {
    return opensimJAMJNI.COMAKTool_get_settle_sim_results_prefix__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_settle_sim_results_prefix() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.COMAKTool_upd_settle_sim_results_prefix__SWIG_1(swigCPtr, this), false);
  }

  public void set_settle_sim_results_prefix(String value) {
    opensimJAMJNI.COMAKTool_set_settle_sim_results_prefix__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_max_iterations(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_max_iterations(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public int get_max_iterations(int i) {
    return opensimJAMJNI.COMAKTool_get_max_iterations__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_int upd_max_iterations(int i) {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_max_iterations__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_max_iterations(int i, int value) {
    opensimJAMJNI.COMAKTool_set_max_iterations__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_max_iterations(int value) {
    return opensimJAMJNI.COMAKTool_append_max_iterations(swigCPtr, this, value);
  }

  public void constructProperty_max_iterations(int initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_max_iterations(swigCPtr, this, initValue);
  }

  public int get_max_iterations() {
    return opensimJAMJNI.COMAKTool_get_max_iterations__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_int upd_max_iterations() {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_max_iterations__SWIG_1(swigCPtr, this), false);
  }

  public void set_max_iterations(int value) {
    opensimJAMJNI.COMAKTool_set_max_iterations__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_udot_tolerance(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_udot_tolerance(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_udot_tolerance(int i) {
    return opensimJAMJNI.COMAKTool_get_udot_tolerance__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_udot_tolerance(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_udot_tolerance__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_udot_tolerance(int i, double value) {
    opensimJAMJNI.COMAKTool_set_udot_tolerance__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_udot_tolerance(double value) {
    return opensimJAMJNI.COMAKTool_append_udot_tolerance(swigCPtr, this, value);
  }

  public void constructProperty_udot_tolerance(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_udot_tolerance(swigCPtr, this, initValue);
  }

  public double get_udot_tolerance() {
    return opensimJAMJNI.COMAKTool_get_udot_tolerance__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_udot_tolerance() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_udot_tolerance__SWIG_1(swigCPtr, this), false);
  }

  public void set_udot_tolerance(double value) {
    opensimJAMJNI.COMAKTool_set_udot_tolerance__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_udot_worse_case_tolerance(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_udot_worse_case_tolerance(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_udot_worse_case_tolerance(int i) {
    return opensimJAMJNI.COMAKTool_get_udot_worse_case_tolerance__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_udot_worse_case_tolerance(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_udot_worse_case_tolerance__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_udot_worse_case_tolerance(int i, double value) {
    opensimJAMJNI.COMAKTool_set_udot_worse_case_tolerance__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_udot_worse_case_tolerance(double value) {
    return opensimJAMJNI.COMAKTool_append_udot_worse_case_tolerance(swigCPtr, this, value);
  }

  public void constructProperty_udot_worse_case_tolerance(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_udot_worse_case_tolerance(swigCPtr, this, initValue);
  }

  public double get_udot_worse_case_tolerance() {
    return opensimJAMJNI.COMAKTool_get_udot_worse_case_tolerance__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_udot_worse_case_tolerance() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_udot_worse_case_tolerance__SWIG_1(swigCPtr, this), false);
  }

  public void set_udot_worse_case_tolerance(double value) {
    opensimJAMJNI.COMAKTool_set_udot_worse_case_tolerance__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_unit_udot_epsilon(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_unit_udot_epsilon(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_unit_udot_epsilon(int i) {
    return opensimJAMJNI.COMAKTool_get_unit_udot_epsilon__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_unit_udot_epsilon(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_unit_udot_epsilon__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_unit_udot_epsilon(int i, double value) {
    opensimJAMJNI.COMAKTool_set_unit_udot_epsilon__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_unit_udot_epsilon(double value) {
    return opensimJAMJNI.COMAKTool_append_unit_udot_epsilon(swigCPtr, this, value);
  }

  public void constructProperty_unit_udot_epsilon(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_unit_udot_epsilon(swigCPtr, this, initValue);
  }

  public double get_unit_udot_epsilon() {
    return opensimJAMJNI.COMAKTool_get_unit_udot_epsilon__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_unit_udot_epsilon() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_unit_udot_epsilon__SWIG_1(swigCPtr, this), false);
  }

  public void set_unit_udot_epsilon(double value) {
    opensimJAMJNI.COMAKTool_set_unit_udot_epsilon__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_optimization_scale_delta_coord(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_optimization_scale_delta_coord(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_optimization_scale_delta_coord(int i) {
    return opensimJAMJNI.COMAKTool_get_optimization_scale_delta_coord__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_optimization_scale_delta_coord(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_optimization_scale_delta_coord__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_optimization_scale_delta_coord(int i, double value) {
    opensimJAMJNI.COMAKTool_set_optimization_scale_delta_coord__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_optimization_scale_delta_coord(double value) {
    return opensimJAMJNI.COMAKTool_append_optimization_scale_delta_coord(swigCPtr, this, value);
  }

  public void constructProperty_optimization_scale_delta_coord(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_optimization_scale_delta_coord(swigCPtr, this, initValue);
  }

  public double get_optimization_scale_delta_coord() {
    return opensimJAMJNI.COMAKTool_get_optimization_scale_delta_coord__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_optimization_scale_delta_coord() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_optimization_scale_delta_coord__SWIG_1(swigCPtr, this), false);
  }

  public void set_optimization_scale_delta_coord(double value) {
    opensimJAMJNI.COMAKTool_set_optimization_scale_delta_coord__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ipopt_diagnostics_level(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_ipopt_diagnostics_level(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public int get_ipopt_diagnostics_level(int i) {
    return opensimJAMJNI.COMAKTool_get_ipopt_diagnostics_level__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_int upd_ipopt_diagnostics_level(int i) {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_ipopt_diagnostics_level__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ipopt_diagnostics_level(int i, int value) {
    opensimJAMJNI.COMAKTool_set_ipopt_diagnostics_level__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ipopt_diagnostics_level(int value) {
    return opensimJAMJNI.COMAKTool_append_ipopt_diagnostics_level(swigCPtr, this, value);
  }

  public void constructProperty_ipopt_diagnostics_level(int initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_ipopt_diagnostics_level(swigCPtr, this, initValue);
  }

  public int get_ipopt_diagnostics_level() {
    return opensimJAMJNI.COMAKTool_get_ipopt_diagnostics_level__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_int upd_ipopt_diagnostics_level() {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_ipopt_diagnostics_level__SWIG_1(swigCPtr, this), false);
  }

  public void set_ipopt_diagnostics_level(int value) {
    opensimJAMJNI.COMAKTool_set_ipopt_diagnostics_level__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ipopt_max_iterations(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_ipopt_max_iterations(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public int get_ipopt_max_iterations(int i) {
    return opensimJAMJNI.COMAKTool_get_ipopt_max_iterations__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_int upd_ipopt_max_iterations(int i) {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_ipopt_max_iterations__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ipopt_max_iterations(int i, int value) {
    opensimJAMJNI.COMAKTool_set_ipopt_max_iterations__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ipopt_max_iterations(int value) {
    return opensimJAMJNI.COMAKTool_append_ipopt_max_iterations(swigCPtr, this, value);
  }

  public void constructProperty_ipopt_max_iterations(int initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_ipopt_max_iterations(swigCPtr, this, initValue);
  }

  public int get_ipopt_max_iterations() {
    return opensimJAMJNI.COMAKTool_get_ipopt_max_iterations__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_int upd_ipopt_max_iterations() {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_ipopt_max_iterations__SWIG_1(swigCPtr, this), false);
  }

  public void set_ipopt_max_iterations(int value) {
    opensimJAMJNI.COMAKTool_set_ipopt_max_iterations__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ipopt_convergence_tolerance(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_ipopt_convergence_tolerance(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_ipopt_convergence_tolerance(int i) {
    return opensimJAMJNI.COMAKTool_get_ipopt_convergence_tolerance__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_ipopt_convergence_tolerance(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_convergence_tolerance__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ipopt_convergence_tolerance(int i, double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_convergence_tolerance__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ipopt_convergence_tolerance(double value) {
    return opensimJAMJNI.COMAKTool_append_ipopt_convergence_tolerance(swigCPtr, this, value);
  }

  public void constructProperty_ipopt_convergence_tolerance(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_ipopt_convergence_tolerance(swigCPtr, this, initValue);
  }

  public double get_ipopt_convergence_tolerance() {
    return opensimJAMJNI.COMAKTool_get_ipopt_convergence_tolerance__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_ipopt_convergence_tolerance() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_convergence_tolerance__SWIG_1(swigCPtr, this), false);
  }

  public void set_ipopt_convergence_tolerance(double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_convergence_tolerance__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ipopt_constraint_tolerance(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_ipopt_constraint_tolerance(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_ipopt_constraint_tolerance(int i) {
    return opensimJAMJNI.COMAKTool_get_ipopt_constraint_tolerance__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_ipopt_constraint_tolerance(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_constraint_tolerance__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ipopt_constraint_tolerance(int i, double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_constraint_tolerance__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ipopt_constraint_tolerance(double value) {
    return opensimJAMJNI.COMAKTool_append_ipopt_constraint_tolerance(swigCPtr, this, value);
  }

  public void constructProperty_ipopt_constraint_tolerance(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_ipopt_constraint_tolerance(swigCPtr, this, initValue);
  }

  public double get_ipopt_constraint_tolerance() {
    return opensimJAMJNI.COMAKTool_get_ipopt_constraint_tolerance__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_ipopt_constraint_tolerance() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_constraint_tolerance__SWIG_1(swigCPtr, this), false);
  }

  public void set_ipopt_constraint_tolerance(double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_constraint_tolerance__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ipopt_limited_memory_history(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_ipopt_limited_memory_history(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public int get_ipopt_limited_memory_history(int i) {
    return opensimJAMJNI.COMAKTool_get_ipopt_limited_memory_history__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_int upd_ipopt_limited_memory_history(int i) {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_ipopt_limited_memory_history__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ipopt_limited_memory_history(int i, int value) {
    opensimJAMJNI.COMAKTool_set_ipopt_limited_memory_history__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ipopt_limited_memory_history(int value) {
    return opensimJAMJNI.COMAKTool_append_ipopt_limited_memory_history(swigCPtr, this, value);
  }

  public void constructProperty_ipopt_limited_memory_history(int initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_ipopt_limited_memory_history(swigCPtr, this, initValue);
  }

  public int get_ipopt_limited_memory_history() {
    return opensimJAMJNI.COMAKTool_get_ipopt_limited_memory_history__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_int upd_ipopt_limited_memory_history() {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_ipopt_limited_memory_history__SWIG_1(swigCPtr, this), false);
  }

  public void set_ipopt_limited_memory_history(int value) {
    opensimJAMJNI.COMAKTool_set_ipopt_limited_memory_history__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ipopt_nlp_scaling_max_gradient(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_ipopt_nlp_scaling_max_gradient(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_ipopt_nlp_scaling_max_gradient(int i) {
    return opensimJAMJNI.COMAKTool_get_ipopt_nlp_scaling_max_gradient__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_ipopt_nlp_scaling_max_gradient(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_nlp_scaling_max_gradient__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ipopt_nlp_scaling_max_gradient(int i, double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_nlp_scaling_max_gradient__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ipopt_nlp_scaling_max_gradient(double value) {
    return opensimJAMJNI.COMAKTool_append_ipopt_nlp_scaling_max_gradient(swigCPtr, this, value);
  }

  public void constructProperty_ipopt_nlp_scaling_max_gradient(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_ipopt_nlp_scaling_max_gradient(swigCPtr, this, initValue);
  }

  public double get_ipopt_nlp_scaling_max_gradient() {
    return opensimJAMJNI.COMAKTool_get_ipopt_nlp_scaling_max_gradient__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_ipopt_nlp_scaling_max_gradient() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_nlp_scaling_max_gradient__SWIG_1(swigCPtr, this), false);
  }

  public void set_ipopt_nlp_scaling_max_gradient(double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_nlp_scaling_max_gradient__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ipopt_nlp_scaling_min_value(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_ipopt_nlp_scaling_min_value(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_ipopt_nlp_scaling_min_value(int i) {
    return opensimJAMJNI.COMAKTool_get_ipopt_nlp_scaling_min_value__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_ipopt_nlp_scaling_min_value(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_nlp_scaling_min_value__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ipopt_nlp_scaling_min_value(int i, double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_nlp_scaling_min_value__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ipopt_nlp_scaling_min_value(double value) {
    return opensimJAMJNI.COMAKTool_append_ipopt_nlp_scaling_min_value(swigCPtr, this, value);
  }

  public void constructProperty_ipopt_nlp_scaling_min_value(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_ipopt_nlp_scaling_min_value(swigCPtr, this, initValue);
  }

  public double get_ipopt_nlp_scaling_min_value() {
    return opensimJAMJNI.COMAKTool_get_ipopt_nlp_scaling_min_value__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_ipopt_nlp_scaling_min_value() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_nlp_scaling_min_value__SWIG_1(swigCPtr, this), false);
  }

  public void set_ipopt_nlp_scaling_min_value(double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_nlp_scaling_min_value__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ipopt_obj_scaling_factor(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_ipopt_obj_scaling_factor(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_ipopt_obj_scaling_factor(int i) {
    return opensimJAMJNI.COMAKTool_get_ipopt_obj_scaling_factor__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_ipopt_obj_scaling_factor(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_obj_scaling_factor__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ipopt_obj_scaling_factor(int i, double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_obj_scaling_factor__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ipopt_obj_scaling_factor(double value) {
    return opensimJAMJNI.COMAKTool_append_ipopt_obj_scaling_factor(swigCPtr, this, value);
  }

  public void constructProperty_ipopt_obj_scaling_factor(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_ipopt_obj_scaling_factor(swigCPtr, this, initValue);
  }

  public double get_ipopt_obj_scaling_factor() {
    return opensimJAMJNI.COMAKTool_get_ipopt_obj_scaling_factor__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_ipopt_obj_scaling_factor() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_ipopt_obj_scaling_factor__SWIG_1(swigCPtr, this), false);
  }

  public void set_ipopt_obj_scaling_factor(double value) {
    opensimJAMJNI.COMAKTool_set_ipopt_obj_scaling_factor__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_COMAKCostFunctionParameterSet(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_COMAKCostFunctionParameterSet(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public COMAKCostFunctionParameterSet get_COMAKCostFunctionParameterSet(int i) {
    return new COMAKCostFunctionParameterSet(opensimJAMJNI.COMAKTool_get_COMAKCostFunctionParameterSet__SWIG_0(swigCPtr, this, i), false);
  }

  public COMAKCostFunctionParameterSet upd_COMAKCostFunctionParameterSet(int i) {
    return new COMAKCostFunctionParameterSet(opensimJAMJNI.COMAKTool_upd_COMAKCostFunctionParameterSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_COMAKCostFunctionParameterSet(int i, COMAKCostFunctionParameterSet value) {
    opensimJAMJNI.COMAKTool_set_COMAKCostFunctionParameterSet__SWIG_0(swigCPtr, this, i, COMAKCostFunctionParameterSet.getCPtr(value), value);
  }

  public int append_COMAKCostFunctionParameterSet(COMAKCostFunctionParameterSet value) {
    return opensimJAMJNI.COMAKTool_append_COMAKCostFunctionParameterSet(swigCPtr, this, COMAKCostFunctionParameterSet.getCPtr(value), value);
  }

  public void constructProperty_COMAKCostFunctionParameterSet(COMAKCostFunctionParameterSet initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_COMAKCostFunctionParameterSet(swigCPtr, this, COMAKCostFunctionParameterSet.getCPtr(initValue), initValue);
  }

  public COMAKCostFunctionParameterSet get_COMAKCostFunctionParameterSet() {
    return new COMAKCostFunctionParameterSet(opensimJAMJNI.COMAKTool_get_COMAKCostFunctionParameterSet__SWIG_1(swigCPtr, this), false);
  }

  public COMAKCostFunctionParameterSet upd_COMAKCostFunctionParameterSet() {
    return new COMAKCostFunctionParameterSet(opensimJAMJNI.COMAKTool_upd_COMAKCostFunctionParameterSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_COMAKCostFunctionParameterSet(COMAKCostFunctionParameterSet value) {
    opensimJAMJNI.COMAKTool_set_COMAKCostFunctionParameterSet__SWIG_1(swigCPtr, this, COMAKCostFunctionParameterSet.getCPtr(value), value);
  }

  public void copyProperty_activation_exponent(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_activation_exponent(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_activation_exponent(int i) {
    return opensimJAMJNI.COMAKTool_get_activation_exponent__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_activation_exponent(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_activation_exponent__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_activation_exponent(int i, double value) {
    opensimJAMJNI.COMAKTool_set_activation_exponent__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_activation_exponent(double value) {
    return opensimJAMJNI.COMAKTool_append_activation_exponent(swigCPtr, this, value);
  }

  public void constructProperty_activation_exponent(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_activation_exponent(swigCPtr, this, initValue);
  }

  public double get_activation_exponent() {
    return opensimJAMJNI.COMAKTool_get_activation_exponent__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_activation_exponent() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_activation_exponent__SWIG_1(swigCPtr, this), false);
  }

  public void set_activation_exponent(double value) {
    opensimJAMJNI.COMAKTool_set_activation_exponent__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_contact_energy_weight(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_contact_energy_weight(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_contact_energy_weight(int i) {
    return opensimJAMJNI.COMAKTool_get_contact_energy_weight__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_contact_energy_weight(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_contact_energy_weight__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_contact_energy_weight(int i, double value) {
    opensimJAMJNI.COMAKTool_set_contact_energy_weight__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_contact_energy_weight(double value) {
    return opensimJAMJNI.COMAKTool_append_contact_energy_weight(swigCPtr, this, value);
  }

  public void constructProperty_contact_energy_weight(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_contact_energy_weight(swigCPtr, this, initValue);
  }

  public double get_contact_energy_weight() {
    return opensimJAMJNI.COMAKTool_get_contact_energy_weight__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_contact_energy_weight() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_contact_energy_weight__SWIG_1(swigCPtr, this), false);
  }

  public void set_contact_energy_weight(double value) {
    opensimJAMJNI.COMAKTool_set_contact_energy_weight__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_non_muscle_actuator_weight(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_non_muscle_actuator_weight(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_non_muscle_actuator_weight(int i) {
    return opensimJAMJNI.COMAKTool_get_non_muscle_actuator_weight__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_non_muscle_actuator_weight(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_non_muscle_actuator_weight__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_non_muscle_actuator_weight(int i, double value) {
    opensimJAMJNI.COMAKTool_set_non_muscle_actuator_weight__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_non_muscle_actuator_weight(double value) {
    return opensimJAMJNI.COMAKTool_append_non_muscle_actuator_weight(swigCPtr, this, value);
  }

  public void constructProperty_non_muscle_actuator_weight(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_non_muscle_actuator_weight(swigCPtr, this, initValue);
  }

  public double get_non_muscle_actuator_weight() {
    return opensimJAMJNI.COMAKTool_get_non_muscle_actuator_weight__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_non_muscle_actuator_weight() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_non_muscle_actuator_weight__SWIG_1(swigCPtr, this), false);
  }

  public void set_non_muscle_actuator_weight(double value) {
    opensimJAMJNI.COMAKTool_set_non_muscle_actuator_weight__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_model_assembly_accuracy(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_model_assembly_accuracy(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public double get_model_assembly_accuracy(int i) {
    return opensimJAMJNI.COMAKTool_get_model_assembly_accuracy__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_model_assembly_accuracy(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_model_assembly_accuracy__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_model_assembly_accuracy(int i, double value) {
    opensimJAMJNI.COMAKTool_set_model_assembly_accuracy__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_model_assembly_accuracy(double value) {
    return opensimJAMJNI.COMAKTool_append_model_assembly_accuracy(swigCPtr, this, value);
  }

  public void constructProperty_model_assembly_accuracy(double initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_model_assembly_accuracy(swigCPtr, this, initValue);
  }

  public double get_model_assembly_accuracy() {
    return opensimJAMJNI.COMAKTool_get_model_assembly_accuracy__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_model_assembly_accuracy() {
    return new SWIGTYPE_p_double(opensimJAMJNI.COMAKTool_upd_model_assembly_accuracy__SWIG_1(swigCPtr, this), false);
  }

  public void set_model_assembly_accuracy(double value) {
    opensimJAMJNI.COMAKTool_set_model_assembly_accuracy__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_use_visualizer(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_use_visualizer(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public boolean get_use_visualizer(int i) {
    return opensimJAMJNI.COMAKTool_get_use_visualizer__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_use_visualizer(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_use_visualizer__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_use_visualizer(int i, boolean value) {
    opensimJAMJNI.COMAKTool_set_use_visualizer__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_use_visualizer(boolean value) {
    return opensimJAMJNI.COMAKTool_append_use_visualizer(swigCPtr, this, value);
  }

  public void constructProperty_use_visualizer(boolean initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_use_visualizer(swigCPtr, this, initValue);
  }

  public boolean get_use_visualizer() {
    return opensimJAMJNI.COMAKTool_get_use_visualizer__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_use_visualizer() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.COMAKTool_upd_use_visualizer__SWIG_1(swigCPtr, this), false);
  }

  public void set_use_visualizer(boolean value) {
    opensimJAMJNI.COMAKTool_set_use_visualizer__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_verbose(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_verbose(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public int get_verbose(int i) {
    return opensimJAMJNI.COMAKTool_get_verbose__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_int upd_verbose(int i) {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_verbose__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_verbose(int i, int value) {
    opensimJAMJNI.COMAKTool_set_verbose__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_verbose(int value) {
    return opensimJAMJNI.COMAKTool_append_verbose(swigCPtr, this, value);
  }

  public void constructProperty_verbose(int initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_verbose(swigCPtr, this, initValue);
  }

  public int get_verbose() {
    return opensimJAMJNI.COMAKTool_get_verbose__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_int upd_verbose() {
    return new SWIGTYPE_p_int(opensimJAMJNI.COMAKTool_upd_verbose__SWIG_1(swigCPtr, this), false);
  }

  public void set_verbose(int value) {
    opensimJAMJNI.COMAKTool_set_verbose__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_AnalysisSet(COMAKTool source) {
    opensimJAMJNI.COMAKTool_copyProperty_AnalysisSet(swigCPtr, this, COMAKTool.getCPtr(source), source);
  }

  public AnalysisSet get_AnalysisSet(int i) {
    return new AnalysisSet(opensimJAMJNI.COMAKTool_get_AnalysisSet__SWIG_0(swigCPtr, this, i), false);
  }

  public AnalysisSet upd_AnalysisSet(int i) {
    return new AnalysisSet(opensimJAMJNI.COMAKTool_upd_AnalysisSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_AnalysisSet(int i, AnalysisSet value) {
    opensimJAMJNI.COMAKTool_set_AnalysisSet__SWIG_0(swigCPtr, this, i, AnalysisSet.getCPtr(value), value);
  }

  public int append_AnalysisSet(AnalysisSet value) {
    return opensimJAMJNI.COMAKTool_append_AnalysisSet(swigCPtr, this, AnalysisSet.getCPtr(value), value);
  }

  public void constructProperty_AnalysisSet(AnalysisSet initValue) {
    opensimJAMJNI.COMAKTool_constructProperty_AnalysisSet(swigCPtr, this, AnalysisSet.getCPtr(initValue), initValue);
  }

  public AnalysisSet get_AnalysisSet() {
    return new AnalysisSet(opensimJAMJNI.COMAKTool_get_AnalysisSet__SWIG_1(swigCPtr, this), false);
  }

  public AnalysisSet upd_AnalysisSet() {
    return new AnalysisSet(opensimJAMJNI.COMAKTool_upd_AnalysisSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_AnalysisSet(AnalysisSet value) {
    opensimJAMJNI.COMAKTool_set_AnalysisSet__SWIG_1(swigCPtr, this, AnalysisSet.getCPtr(value), value);
  }

  /**
   * Default constructor.
   */
  public COMAKTool() {
    this(opensimJAMJNI.new_COMAKTool__SWIG_0(), true);
  }

  public COMAKTool(String file) {
    this(opensimJAMJNI.new_COMAKTool__SWIG_1(file), true);
  }

  public boolean run() {
    return opensimJAMJNI.COMAKTool_run(swigCPtr, this);
  }

  public void setModel(Model model) {
    opensimJAMJNI.COMAKTool_setModel(swigCPtr, this, Model.getCPtr(model), model);
  }

}
