/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 * The ForsimTool enables forward dynamic simulations of joint mechanics to be <br>
 * performed. Practically, this allows simulations of cadaver experiments, <br>
 * passive clinical examinations, and simulations where the muscle forces or <br>
 * excitations are known inputs. <br>
 * <br>
 * Fundamentally, this tool is similar to the ForwardTool in the opensim-core,<br>
 * but the interface is designed to facilitate forward simulations involving <br>
 * joint mechanics and specifically articular contact. Additionally, the <br>
 * forsim tool uses an implicit integrator (SimTK::CPODES::BDF), which provides <br>
 * superior performance for simulations that involve contact compared to the <br>
 * explicit integrators used by the existing OpenSim ForwardTool. <br>
 * <br>
 * The following optional input input files can be used to define time varying <br>
 * simulation parameters:<br>
 * <br>
 * actuator_input_file: Define muscle and actuator controls (excitations), <br>
 * activations, or forces vs time.<br>
 * <br>
 * external_loads_file: Define the external loads and the model segments<br>
 * that they are acting on. <br>
 * <br>
 * prescribed_coordinate_file: Define the prescribed coordinates in the <br>
 * model and their values vs time.  
 */
public class ForsimTool extends OpenSimObject {
  private transient long swigCPtr;

  public ForsimTool(long cPtr, boolean cMemoryOwn) {
    super(opensimJAMJNI.ForsimTool_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ForsimTool obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimJAMJNI.delete_ForsimTool(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static ForsimTool safeDownCast(OpenSimObject obj) {
    long cPtr = opensimJAMJNI.ForsimTool_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new ForsimTool(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimJAMJNI.ForsimTool_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimJAMJNI.ForsimTool_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimJAMJNI.ForsimTool_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ForsimTool(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimJAMJNI.ForsimTool_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_model_file(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_model_file(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public String get_model_file(int i) {
    return opensimJAMJNI.ForsimTool_get_model_file__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_model_file(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_model_file__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_model_file(int i, String value) {
    opensimJAMJNI.ForsimTool_set_model_file__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_model_file(String value) {
    return opensimJAMJNI.ForsimTool_append_model_file(swigCPtr, this, value);
  }

  public void constructProperty_model_file(String initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_model_file(swigCPtr, this, initValue);
  }

  public String get_model_file() {
    return opensimJAMJNI.ForsimTool_get_model_file__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_model_file() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_model_file__SWIG_1(swigCPtr, this), false);
  }

  public void set_model_file(String value) {
    opensimJAMJNI.ForsimTool_set_model_file__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_results_directory(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_results_directory(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public String get_results_directory(int i) {
    return opensimJAMJNI.ForsimTool_get_results_directory__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_results_directory(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_results_directory__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_results_directory(int i, String value) {
    opensimJAMJNI.ForsimTool_set_results_directory__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_results_directory(String value) {
    return opensimJAMJNI.ForsimTool_append_results_directory(swigCPtr, this, value);
  }

  public void constructProperty_results_directory(String initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_results_directory(swigCPtr, this, initValue);
  }

  public String get_results_directory() {
    return opensimJAMJNI.ForsimTool_get_results_directory__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_results_directory() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_results_directory__SWIG_1(swigCPtr, this), false);
  }

  public void set_results_directory(String value) {
    opensimJAMJNI.ForsimTool_set_results_directory__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_results_file_basename(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_results_file_basename(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public String get_results_file_basename(int i) {
    return opensimJAMJNI.ForsimTool_get_results_file_basename__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_results_file_basename(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_results_file_basename__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_results_file_basename(int i, String value) {
    opensimJAMJNI.ForsimTool_set_results_file_basename__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_results_file_basename(String value) {
    return opensimJAMJNI.ForsimTool_append_results_file_basename(swigCPtr, this, value);
  }

  public void constructProperty_results_file_basename(String initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_results_file_basename(swigCPtr, this, initValue);
  }

  public String get_results_file_basename() {
    return opensimJAMJNI.ForsimTool_get_results_file_basename__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_results_file_basename() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_results_file_basename__SWIG_1(swigCPtr, this), false);
  }

  public void set_results_file_basename(String value) {
    opensimJAMJNI.ForsimTool_set_results_file_basename__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_start_time(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_start_time(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public double get_start_time(int i) {
    return opensimJAMJNI.ForsimTool_get_start_time__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_start_time(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_start_time__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_start_time(int i, double value) {
    opensimJAMJNI.ForsimTool_set_start_time__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_start_time(double value) {
    return opensimJAMJNI.ForsimTool_append_start_time(swigCPtr, this, value);
  }

  public void constructProperty_start_time(double initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_start_time(swigCPtr, this, initValue);
  }

  public double get_start_time() {
    return opensimJAMJNI.ForsimTool_get_start_time__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_start_time() {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_start_time__SWIG_1(swigCPtr, this), false);
  }

  public void set_start_time(double value) {
    opensimJAMJNI.ForsimTool_set_start_time__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_stop_time(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_stop_time(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public double get_stop_time(int i) {
    return opensimJAMJNI.ForsimTool_get_stop_time__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_stop_time(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_stop_time__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_stop_time(int i, double value) {
    opensimJAMJNI.ForsimTool_set_stop_time__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_stop_time(double value) {
    return opensimJAMJNI.ForsimTool_append_stop_time(swigCPtr, this, value);
  }

  public void constructProperty_stop_time(double initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_stop_time(swigCPtr, this, initValue);
  }

  public double get_stop_time() {
    return opensimJAMJNI.ForsimTool_get_stop_time__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_stop_time() {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_stop_time__SWIG_1(swigCPtr, this), false);
  }

  public void set_stop_time(double value) {
    opensimJAMJNI.ForsimTool_set_stop_time__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_report_time_step(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_report_time_step(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public double get_report_time_step(int i) {
    return opensimJAMJNI.ForsimTool_get_report_time_step__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_report_time_step(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_report_time_step__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_report_time_step(int i, double value) {
    opensimJAMJNI.ForsimTool_set_report_time_step__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_report_time_step(double value) {
    return opensimJAMJNI.ForsimTool_append_report_time_step(swigCPtr, this, value);
  }

  public void constructProperty_report_time_step(double initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_report_time_step(swigCPtr, this, initValue);
  }

  public double get_report_time_step() {
    return opensimJAMJNI.ForsimTool_get_report_time_step__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_report_time_step() {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_report_time_step__SWIG_1(swigCPtr, this), false);
  }

  public void set_report_time_step(double value) {
    opensimJAMJNI.ForsimTool_set_report_time_step__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_minimum_time_step(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_minimum_time_step(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public double get_minimum_time_step(int i) {
    return opensimJAMJNI.ForsimTool_get_minimum_time_step__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_minimum_time_step(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_minimum_time_step__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_minimum_time_step(int i, double value) {
    opensimJAMJNI.ForsimTool_set_minimum_time_step__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_minimum_time_step(double value) {
    return opensimJAMJNI.ForsimTool_append_minimum_time_step(swigCPtr, this, value);
  }

  public void constructProperty_minimum_time_step(double initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_minimum_time_step(swigCPtr, this, initValue);
  }

  public double get_minimum_time_step() {
    return opensimJAMJNI.ForsimTool_get_minimum_time_step__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_minimum_time_step() {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_minimum_time_step__SWIG_1(swigCPtr, this), false);
  }

  public void set_minimum_time_step(double value) {
    opensimJAMJNI.ForsimTool_set_minimum_time_step__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_maximum_time_step(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_maximum_time_step(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public double get_maximum_time_step(int i) {
    return opensimJAMJNI.ForsimTool_get_maximum_time_step__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_maximum_time_step(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_maximum_time_step__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_maximum_time_step(int i, double value) {
    opensimJAMJNI.ForsimTool_set_maximum_time_step__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_maximum_time_step(double value) {
    return opensimJAMJNI.ForsimTool_append_maximum_time_step(swigCPtr, this, value);
  }

  public void constructProperty_maximum_time_step(double initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_maximum_time_step(swigCPtr, this, initValue);
  }

  public double get_maximum_time_step() {
    return opensimJAMJNI.ForsimTool_get_maximum_time_step__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_maximum_time_step() {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_maximum_time_step__SWIG_1(swigCPtr, this), false);
  }

  public void set_maximum_time_step(double value) {
    opensimJAMJNI.ForsimTool_set_maximum_time_step__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_integrator_accuracy(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_integrator_accuracy(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public double get_integrator_accuracy(int i) {
    return opensimJAMJNI.ForsimTool_get_integrator_accuracy__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_integrator_accuracy(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_integrator_accuracy__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_integrator_accuracy(int i, double value) {
    opensimJAMJNI.ForsimTool_set_integrator_accuracy__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_integrator_accuracy(double value) {
    return opensimJAMJNI.ForsimTool_append_integrator_accuracy(swigCPtr, this, value);
  }

  public void constructProperty_integrator_accuracy(double initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_integrator_accuracy(swigCPtr, this, initValue);
  }

  public double get_integrator_accuracy() {
    return opensimJAMJNI.ForsimTool_get_integrator_accuracy__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_integrator_accuracy() {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_integrator_accuracy__SWIG_1(swigCPtr, this), false);
  }

  public void set_integrator_accuracy(double value) {
    opensimJAMJNI.ForsimTool_set_integrator_accuracy__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_internal_step_limit(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_internal_step_limit(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public int get_internal_step_limit(int i) {
    return opensimJAMJNI.ForsimTool_get_internal_step_limit__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_int upd_internal_step_limit(int i) {
    return new SWIGTYPE_p_int(opensimJAMJNI.ForsimTool_upd_internal_step_limit__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_internal_step_limit(int i, int value) {
    opensimJAMJNI.ForsimTool_set_internal_step_limit__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_internal_step_limit(int value) {
    return opensimJAMJNI.ForsimTool_append_internal_step_limit(swigCPtr, this, value);
  }

  public void constructProperty_internal_step_limit(int initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_internal_step_limit(swigCPtr, this, initValue);
  }

  public int get_internal_step_limit() {
    return opensimJAMJNI.ForsimTool_get_internal_step_limit__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_int upd_internal_step_limit() {
    return new SWIGTYPE_p_int(opensimJAMJNI.ForsimTool_upd_internal_step_limit__SWIG_1(swigCPtr, this), false);
  }

  public void set_internal_step_limit(int value) {
    opensimJAMJNI.ForsimTool_set_internal_step_limit__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_constant_muscle_control(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_constant_muscle_control(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public double get_constant_muscle_control(int i) {
    return opensimJAMJNI.ForsimTool_get_constant_muscle_control__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_constant_muscle_control(int i) {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_constant_muscle_control__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_constant_muscle_control(int i, double value) {
    opensimJAMJNI.ForsimTool_set_constant_muscle_control__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_constant_muscle_control(double value) {
    return opensimJAMJNI.ForsimTool_append_constant_muscle_control(swigCPtr, this, value);
  }

  public void constructProperty_constant_muscle_control(double initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_constant_muscle_control(swigCPtr, this, initValue);
  }

  public double get_constant_muscle_control() {
    return opensimJAMJNI.ForsimTool_get_constant_muscle_control__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_constant_muscle_control() {
    return new SWIGTYPE_p_double(opensimJAMJNI.ForsimTool_upd_constant_muscle_control__SWIG_1(swigCPtr, this), false);
  }

  public void set_constant_muscle_control(double value) {
    opensimJAMJNI.ForsimTool_set_constant_muscle_control__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ignore_activation_dynamics(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_ignore_activation_dynamics(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public boolean get_ignore_activation_dynamics(int i) {
    return opensimJAMJNI.ForsimTool_get_ignore_activation_dynamics__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_ignore_activation_dynamics(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_ignore_activation_dynamics__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ignore_activation_dynamics(int i, boolean value) {
    opensimJAMJNI.ForsimTool_set_ignore_activation_dynamics__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ignore_activation_dynamics(boolean value) {
    return opensimJAMJNI.ForsimTool_append_ignore_activation_dynamics(swigCPtr, this, value);
  }

  public void constructProperty_ignore_activation_dynamics(boolean initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_ignore_activation_dynamics(swigCPtr, this, initValue);
  }

  public boolean get_ignore_activation_dynamics() {
    return opensimJAMJNI.ForsimTool_get_ignore_activation_dynamics__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_ignore_activation_dynamics() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_ignore_activation_dynamics__SWIG_1(swigCPtr, this), false);
  }

  public void set_ignore_activation_dynamics(boolean value) {
    opensimJAMJNI.ForsimTool_set_ignore_activation_dynamics__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ignore_tendon_compliance(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_ignore_tendon_compliance(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public boolean get_ignore_tendon_compliance(int i) {
    return opensimJAMJNI.ForsimTool_get_ignore_tendon_compliance__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_ignore_tendon_compliance(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_ignore_tendon_compliance__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ignore_tendon_compliance(int i, boolean value) {
    opensimJAMJNI.ForsimTool_set_ignore_tendon_compliance__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ignore_tendon_compliance(boolean value) {
    return opensimJAMJNI.ForsimTool_append_ignore_tendon_compliance(swigCPtr, this, value);
  }

  public void constructProperty_ignore_tendon_compliance(boolean initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_ignore_tendon_compliance(swigCPtr, this, initValue);
  }

  public boolean get_ignore_tendon_compliance() {
    return opensimJAMJNI.ForsimTool_get_ignore_tendon_compliance__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_ignore_tendon_compliance() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_ignore_tendon_compliance__SWIG_1(swigCPtr, this), false);
  }

  public void set_ignore_tendon_compliance(boolean value) {
    opensimJAMJNI.ForsimTool_set_ignore_tendon_compliance__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ignore_muscle_dynamics(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_ignore_muscle_dynamics(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public boolean get_ignore_muscle_dynamics(int i) {
    return opensimJAMJNI.ForsimTool_get_ignore_muscle_dynamics__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_ignore_muscle_dynamics(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_ignore_muscle_dynamics__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ignore_muscle_dynamics(int i, boolean value) {
    opensimJAMJNI.ForsimTool_set_ignore_muscle_dynamics__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ignore_muscle_dynamics(boolean value) {
    return opensimJAMJNI.ForsimTool_append_ignore_muscle_dynamics(swigCPtr, this, value);
  }

  public void constructProperty_ignore_muscle_dynamics(boolean initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_ignore_muscle_dynamics(swigCPtr, this, initValue);
  }

  public boolean get_ignore_muscle_dynamics() {
    return opensimJAMJNI.ForsimTool_get_ignore_muscle_dynamics__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_ignore_muscle_dynamics() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_ignore_muscle_dynamics__SWIG_1(swigCPtr, this), false);
  }

  public void set_ignore_muscle_dynamics(boolean value) {
    opensimJAMJNI.ForsimTool_set_ignore_muscle_dynamics__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_equilibrate_muscles(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_equilibrate_muscles(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public boolean get_equilibrate_muscles(int i) {
    return opensimJAMJNI.ForsimTool_get_equilibrate_muscles__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_equilibrate_muscles(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_equilibrate_muscles__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_equilibrate_muscles(int i, boolean value) {
    opensimJAMJNI.ForsimTool_set_equilibrate_muscles__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_equilibrate_muscles(boolean value) {
    return opensimJAMJNI.ForsimTool_append_equilibrate_muscles(swigCPtr, this, value);
  }

  public void constructProperty_equilibrate_muscles(boolean initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_equilibrate_muscles(swigCPtr, this, initValue);
  }

  public boolean get_equilibrate_muscles() {
    return opensimJAMJNI.ForsimTool_get_equilibrate_muscles__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_equilibrate_muscles() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_equilibrate_muscles__SWIG_1(swigCPtr, this), false);
  }

  public void set_equilibrate_muscles(boolean value) {
    opensimJAMJNI.ForsimTool_set_equilibrate_muscles__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_unconstrained_coordinates(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_unconstrained_coordinates(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public String get_unconstrained_coordinates(int i) {
    return opensimJAMJNI.ForsimTool_get_unconstrained_coordinates(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_unconstrained_coordinates(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_unconstrained_coordinates(swigCPtr, this, i), false);
  }

  public void set_unconstrained_coordinates(int i, String value) {
    opensimJAMJNI.ForsimTool_set_unconstrained_coordinates(swigCPtr, this, i, value);
  }

  public int append_unconstrained_coordinates(String value) {
    return opensimJAMJNI.ForsimTool_append_unconstrained_coordinates(swigCPtr, this, value);
  }

  public void constructProperty_unconstrained_coordinates() {
    opensimJAMJNI.ForsimTool_constructProperty_unconstrained_coordinates(swigCPtr, this);
  }

  public void copyProperty_actuator_input_file(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_actuator_input_file(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public String get_actuator_input_file(int i) {
    return opensimJAMJNI.ForsimTool_get_actuator_input_file__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_actuator_input_file(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_actuator_input_file__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_actuator_input_file(int i, String value) {
    opensimJAMJNI.ForsimTool_set_actuator_input_file__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_actuator_input_file(String value) {
    return opensimJAMJNI.ForsimTool_append_actuator_input_file(swigCPtr, this, value);
  }

  public void constructProperty_actuator_input_file(String initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_actuator_input_file(swigCPtr, this, initValue);
  }

  public String get_actuator_input_file() {
    return opensimJAMJNI.ForsimTool_get_actuator_input_file__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_actuator_input_file() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_actuator_input_file__SWIG_1(swigCPtr, this), false);
  }

  public void set_actuator_input_file(String value) {
    opensimJAMJNI.ForsimTool_set_actuator_input_file__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_external_loads_file(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_external_loads_file(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public String get_external_loads_file(int i) {
    return opensimJAMJNI.ForsimTool_get_external_loads_file__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_external_loads_file(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_external_loads_file__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_external_loads_file(int i, String value) {
    opensimJAMJNI.ForsimTool_set_external_loads_file__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_external_loads_file(String value) {
    return opensimJAMJNI.ForsimTool_append_external_loads_file(swigCPtr, this, value);
  }

  public void constructProperty_external_loads_file(String initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_external_loads_file(swigCPtr, this, initValue);
  }

  public String get_external_loads_file() {
    return opensimJAMJNI.ForsimTool_get_external_loads_file__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_external_loads_file() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_external_loads_file__SWIG_1(swigCPtr, this), false);
  }

  public void set_external_loads_file(String value) {
    opensimJAMJNI.ForsimTool_set_external_loads_file__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_prescribed_coordinates_file(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_prescribed_coordinates_file(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public String get_prescribed_coordinates_file(int i) {
    return opensimJAMJNI.ForsimTool_get_prescribed_coordinates_file__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_prescribed_coordinates_file(int i) {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_prescribed_coordinates_file__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_prescribed_coordinates_file(int i, String value) {
    opensimJAMJNI.ForsimTool_set_prescribed_coordinates_file__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_prescribed_coordinates_file(String value) {
    return opensimJAMJNI.ForsimTool_append_prescribed_coordinates_file(swigCPtr, this, value);
  }

  public void constructProperty_prescribed_coordinates_file(String initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_prescribed_coordinates_file(swigCPtr, this, initValue);
  }

  public String get_prescribed_coordinates_file() {
    return opensimJAMJNI.ForsimTool_get_prescribed_coordinates_file__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_prescribed_coordinates_file() {
    return new SWIGTYPE_p_std__string(opensimJAMJNI.ForsimTool_upd_prescribed_coordinates_file__SWIG_1(swigCPtr, this), false);
  }

  public void set_prescribed_coordinates_file(String value) {
    opensimJAMJNI.ForsimTool_set_prescribed_coordinates_file__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_use_visualizer(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_use_visualizer(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public boolean get_use_visualizer(int i) {
    return opensimJAMJNI.ForsimTool_get_use_visualizer__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_use_visualizer(int i) {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_use_visualizer__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_use_visualizer(int i, boolean value) {
    opensimJAMJNI.ForsimTool_set_use_visualizer__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_use_visualizer(boolean value) {
    return opensimJAMJNI.ForsimTool_append_use_visualizer(swigCPtr, this, value);
  }

  public void constructProperty_use_visualizer(boolean initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_use_visualizer(swigCPtr, this, initValue);
  }

  public boolean get_use_visualizer() {
    return opensimJAMJNI.ForsimTool_get_use_visualizer__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_use_visualizer() {
    return new SWIGTYPE_p_bool(opensimJAMJNI.ForsimTool_upd_use_visualizer__SWIG_1(swigCPtr, this), false);
  }

  public void set_use_visualizer(boolean value) {
    opensimJAMJNI.ForsimTool_set_use_visualizer__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_verbose(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_verbose(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public int get_verbose(int i) {
    return opensimJAMJNI.ForsimTool_get_verbose__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_int upd_verbose(int i) {
    return new SWIGTYPE_p_int(opensimJAMJNI.ForsimTool_upd_verbose__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_verbose(int i, int value) {
    opensimJAMJNI.ForsimTool_set_verbose__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_verbose(int value) {
    return opensimJAMJNI.ForsimTool_append_verbose(swigCPtr, this, value);
  }

  public void constructProperty_verbose(int initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_verbose(swigCPtr, this, initValue);
  }

  public int get_verbose() {
    return opensimJAMJNI.ForsimTool_get_verbose__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_int upd_verbose() {
    return new SWIGTYPE_p_int(opensimJAMJNI.ForsimTool_upd_verbose__SWIG_1(swigCPtr, this), false);
  }

  public void set_verbose(int value) {
    opensimJAMJNI.ForsimTool_set_verbose__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_AnalysisSet(ForsimTool source) {
    opensimJAMJNI.ForsimTool_copyProperty_AnalysisSet(swigCPtr, this, ForsimTool.getCPtr(source), source);
  }

  public AnalysisSet get_AnalysisSet(int i) {
    return new AnalysisSet(opensimJAMJNI.ForsimTool_get_AnalysisSet__SWIG_0(swigCPtr, this, i), false);
  }

  public AnalysisSet upd_AnalysisSet(int i) {
    return new AnalysisSet(opensimJAMJNI.ForsimTool_upd_AnalysisSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_AnalysisSet(int i, AnalysisSet value) {
    opensimJAMJNI.ForsimTool_set_AnalysisSet__SWIG_0(swigCPtr, this, i, AnalysisSet.getCPtr(value), value);
  }

  public int append_AnalysisSet(AnalysisSet value) {
    return opensimJAMJNI.ForsimTool_append_AnalysisSet(swigCPtr, this, AnalysisSet.getCPtr(value), value);
  }

  public void constructProperty_AnalysisSet(AnalysisSet initValue) {
    opensimJAMJNI.ForsimTool_constructProperty_AnalysisSet(swigCPtr, this, AnalysisSet.getCPtr(initValue), initValue);
  }

  public AnalysisSet get_AnalysisSet() {
    return new AnalysisSet(opensimJAMJNI.ForsimTool_get_AnalysisSet__SWIG_1(swigCPtr, this), false);
  }

  public AnalysisSet upd_AnalysisSet() {
    return new AnalysisSet(opensimJAMJNI.ForsimTool_upd_AnalysisSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_AnalysisSet(AnalysisSet value) {
    opensimJAMJNI.ForsimTool_set_AnalysisSet__SWIG_1(swigCPtr, this, AnalysisSet.getCPtr(value), value);
  }

  public ForsimTool() {
    this(opensimJAMJNI.new_ForsimTool__SWIG_0(), true);
  }

  public ForsimTool(String settings_file) {
    this(opensimJAMJNI.new_ForsimTool__SWIG_1(settings_file), true);
  }

  public void setModel(Model aModel) {
    opensimJAMJNI.ForsimTool_setModel(swigCPtr, this, Model.getCPtr(aModel), aModel);
  }

  public boolean run() {
    return opensimJAMJNI.ForsimTool_run(swigCPtr, this);
  }

}
